import 'package:flutter/material.dart';
import 'package:carousel_slider/carousel_slider.dart';

class IntroductionSlide extends StatefulWidget {
  const IntroductionSlide({super.key});

  @override
  State<IntroductionSlide> createState() => _IntroductionSlideState();
}

class _IntroductionSlideState extends State<IntroductionSlide> {
  List<String>? imgList; // Danh s√°ch path ·∫£nh JPG
  final List<String> description = [
    "Tui l√† m·ªôt con ong üêù chƒÉm ch·ªâ s·∫Ω gi√∫p b·∫°n qu·∫£n l√Ω chi ti√™u."
    "Theo d√µi thu nh·∫≠p v√† chi ti√™u h·∫±ng ng√†y c·ªßa b·∫°n.",
    "Gi√∫p b·∫°n ƒë·∫°t ƒë∆∞·ª£c c√°c m·ª•c ti√™u t√†i ch√≠nh d·ªÖ d√†ng h∆°n.",
  ];

  int _currentIndex = 0;

  // H√†m load ·∫£nh JPG t·ª´ assets
  Future<void> _initImages() async {
    setState(() {
      imgList = [
        'assets/images/ongtron.jpg', // ƒê∆∞·ªùng d·∫´n t·ªõi ·∫£nh JPEG
      ];
    });
  }

  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance.addPostFrameCallback((_) {
      _initImages();
    });
  }

  @override
  Widget build(BuildContext context) {
    return imgList != null
        ? Column(
          children: [
            CarouselSlider(
              items:
                  imgList!.asMap().entries.map<Widget>((entry) {
                    final index = entry.key;
                    final element = entry.value;
                    return Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Image.asset(
                          element,
                          width: 200.0,
                          height: 200.0,
                        ), // Hi·ªÉn th·ªã ·∫£nh JPG
                        index == 0
                            ? const Text(
                              'MONEY GROUP 4',
                              style: TextStyle(
                                color: Colors.white,
                                fontFamily: 'Montserrat',
                                fontWeight: FontWeight.w900,
                                fontSize: 24.0,
                              ),
                              textAlign: TextAlign.center,
                            )
                            : const SizedBox(height: 30.0),
                        Container(
                          padding: const EdgeInsets.symmetric(
                            vertical: 10.0,
                            horizontal: 40.0,
                          ),
                          child: Text(
                            description[index],
                            style: const TextStyle(
                              color: Colors.white70,
                              fontFamily: 'Montserrat',
                              fontWeight: FontWeight.w400,
                              fontSize: 16.0,
                            ),
                            textAlign: TextAlign.center,
                          ),
                        ),
                      ],
                    );
                  }).toList(),
              options: CarouselOptions(
                scrollPhysics: const BouncingScrollPhysics(),
                autoPlay: false,
                aspectRatio: 0.8,
                enlargeCenterPage: true,
                enableInfiniteScroll: false,
                onPageChanged: (index, reason) {
                  setState(() {
                    _currentIndex = index;
                  });
                },
              ),
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children:
                  imgList!.asMap().entries.map<Widget>((entry) {
                    final index = entry.key;
                    return Container(
                      width: 8.0,
                      height: 8.0,
                      margin: const EdgeInsets.symmetric(
                        vertical: 10.0,
                        horizontal: 2.0,
                      ),
                      decoration: BoxDecoration(
                        shape: BoxShape.circle,
                        color:
                            _currentIndex == index
                                ? const Color.fromRGBO(255, 255, 255, 0.9)
                                : const Color.fromRGBO(255, 255, 255, 0.4),
                      ),
                    );
                  }).toList(),
            ),
          ],
        )
        : Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Icon(
                Icons.hourglass_empty,
                color: Colors.white.withOpacity(0.12),
                size: 100,
              ),
              const SizedBox(height: 10),
              Text(
                'Loading',
                style: TextStyle(
                  fontFamily: 'Montserrat',
                  fontSize: 16.0,
                  fontWeight: FontWeight.w500,
                  color: Colors.white.withOpacity(0.24),
                ),
              ),
            ],
          ),
        );
  }
}
